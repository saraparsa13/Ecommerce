[{"E:\\projects\\react app\\ecommerce\\src\\index.js":"1","E:\\projects\\react app\\ecommerce\\src\\components\\Accordion.jsx":"2","E:\\projects\\react app\\Ecommerce\\src\\index.js":"3","E:\\projects\\react app\\Ecommerce\\src\\components\\Accordion.jsx":"4","E:\\projects\\react app\\Ecommerce\\src\\components\\Login.jsx":"5","E:\\projects\\react app\\Ecommerce\\src\\routes\\index.jsx":"6","E:\\projects\\react app\\Ecommerce\\src\\components\\Home.jsx":"7","E:\\projects\\react app\\Ecommerce\\src\\components\\Treeview.jsx":"8","E:\\projects\\react app\\Ecommerce\\src\\components\\TreeviewLoader.jsx":"9","E:\\projects\\react app\\Ecommerce\\src\\components\\AccordionLoader.jsx":"10"},{"size":541,"mtime":1609774300983,"results":"11","hashOfConfig":"12"},{"size":3521,"mtime":1609787942843,"results":"13","hashOfConfig":"12"},{"size":928,"mtime":1611428644810,"results":"14","hashOfConfig":"15"},{"size":4044,"mtime":1611407308254,"results":"16","hashOfConfig":"15"},{"size":7526,"mtime":1611387791625,"results":"17","hashOfConfig":"15"},{"size":475,"mtime":1611428427951,"results":"18","hashOfConfig":"15"},{"size":281,"mtime":1611428560510,"results":"19","hashOfConfig":"15"},{"size":1031,"mtime":1611428597206,"results":"20","hashOfConfig":"15"},{"size":648,"mtime":1611428470781,"results":"21","hashOfConfig":"15"},{"size":2371,"mtime":1611428584435,"results":"22","hashOfConfig":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1r920mj",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1irvqce",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\projects\\react app\\ecommerce\\src\\index.js",[],["47","48"],"E:\\projects\\react app\\ecommerce\\src\\components\\Accordion.jsx",[],["49","50"],"E:\\projects\\react app\\Ecommerce\\src\\index.js",[],"E:\\projects\\react app\\Ecommerce\\src\\components\\Accordion.jsx",[],["51","52"],"E:\\projects\\react app\\Ecommerce\\src\\components\\Login.jsx",["53"],"import React, { useState } from 'react'\r\nimport { useForm } from \"react-hook-form\"\r\nimport backgroundImage from '../assets/images/bg.png'\r\nimport logo from '../assets/images/logo.svg'\r\n\r\nimport {\r\n  Checkbox,\r\n  Typography,\r\n  TextField,\r\n  FormControlLabel,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Hidden\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst gridStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#f4f5f7',\r\n    height: '100vh',\r\n    width: '100%',\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '0.9rem'\r\n    },\r\n  }\r\n}))\r\n\r\nconst buttonStyles = makeStyles(() => ({\r\n  root: {\r\n    backgroundColor: '#00885a',\r\n    width: '60%',\r\n    margin: '2%',\r\n    alignContent: 'center',\r\n    padding: '4%',\r\n    color: 'white',\r\n  }\r\n}))\r\n\r\nconst paperStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: '#FFF',\r\n    width: 1000,\r\n    height: 500,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'auto',\r\n      height: 'auto'\r\n    },\r\n  }\r\n}))\r\n\r\nconst textFieldStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 350,\r\n    margin: '2%',\r\n    \"& label.MuiInputLabel-root \": {\r\n      transform: \"translate(270px, -6px) scale(0.75)\",\r\n      backgroundColor: 'white',\r\n      padding: '2%',\r\n      [theme.breakpoints.down('sm')]: {\r\n        transform: \"translate(140px, -6px) scale(0.75)\",\r\n        padding: '1%',\r\n        fontSize: '0.9rem'\r\n      },\r\n    },\r\n    \"& label.Mui-focused\": {\r\n      color: '#FF7F63'\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"& input.MuiInputBase-input\": {\r\n        fontSize: '0.9rem',\r\n        fontFamily: 'Sahel',\r\n        // color: 'default',\r\n        [theme.breakpoints.down('sm')]: {\r\n          fontSize: '0.75rem'\r\n        },\r\n      },\r\n      \"& fieldset\": {\r\n        borderColor: \"default\",\r\n        \"& legend\": {\r\n          width: 0\r\n        },\r\n      },\r\n      \"&:hover fieldset\": {\r\n        borderColor: '#FF7F63',\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#FF7F63\"\r\n      }\r\n    },\r\n    \"& p.MuiFormHelperText-root\": {\r\n      textAlign: 'right'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 208\r\n    },\r\n  }\r\n}))\r\n\r\nconst formControlLabelStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginRight: 0,\r\n    paddingTop: '7%',\r\n    paddingBottom: '2%',\r\n    \"& span.MuiTypography-root\": {\r\n      fontSize: '0.9rem',\r\n      [theme.breakpoints.down('sm')]: {\r\n        fontSize: '0.75rem'\r\n      },\r\n    }\r\n  }\r\n}))\r\n\r\nconst typographyStyles = makeStyles((theme) => ({\r\n  root: {\r\n    alignSelf: 'flex-start',\r\n    color: '#00885a',\r\n    fontWeight: 'bold',\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '0.8rem'\r\n    },\r\n  }\r\n}))\r\n\r\nconst flexStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  }\r\n}))\r\n\r\nconst divStyles = makeStyles(() => ({\r\n  root: {\r\n    width: '43%', \r\n    marginBottom: '2%' \r\n  }\r\n}))\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: 'لطفا نام کاربری خود را وارد نمایید',\r\n    password: 'لطفا رمز عبور خود را وارد نمایید'\r\n  })\r\n  const { handleSubmit } = useForm();\r\n\r\n  const grid = gridStyles()\r\n  const button = buttonStyles()\r\n  const paper = paperStyles()\r\n  const textField = textFieldStyles()\r\n  const formControlLabel = formControlLabelStyles()\r\n  const typography = typographyStyles()\r\n  const flex = flexStyles()\r\n  const div = divStyles()\r\n\r\n  const onSubmit = (e) => {\r\n    console.log('hi')\r\n  }\r\n\r\n  const onchangeHandler = (e) => {\r\n    if (e.target.name === 'username') {\r\n      setFormData({...formData, username: e.target.value})\r\n    }if (e.target.name === 'password') {\r\n      setFormData({...formData, password: e.target.value})\r\n    }\r\n  }\r\n\r\n  const clickHandler = (e) => {\r\n    if (e.target.name === 'username' && formData.username.length !== 0) {\r\n      setFormData({...formData, username: \"\"})\r\n    }if (e.target.name === 'password' && formData.password.length !== 0) {\r\n      setFormData({...formData, password: \"\"})\r\n      console.log('yes')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className={grid.root}>\r\n      <Grid item lg={10}>\r\n        <Paper className={paper.root} elevation={1} >\r\n          <Grid item xs={6}\r\n            container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\">\r\n            <div className={flex.root, div.root}>\r\n              <img style={{ width: 100, height: 100 }} src={logo} alt=\"\" />\r\n              <Typography \r\n                className={typography.root} \r\n                variant=\"h6\">مدیریت گزارشات</Typography>\r\n            </div>\r\n            <div>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div>\r\n                  <TextField\r\n                    required\r\n                    className={textField.root}\r\n                    label=\"نام کاربری\"\r\n                    variant=\"outlined\"\r\n                    id=\"custom-css-outlined-input\"\r\n                    value={formData.username}\r\n                    error={formData.username === \"\"}\r\n                    helperText={\r\n                      formData.username === \"\" ? \r\n                      'نام کاربری را وارد نمایید' :\r\n                      ' '}\r\n                    onChange={onchangeHandler}\r\n                    onClick={clickHandler}\r\n                    name='username'\r\n                    />\r\n                </div>\r\n                <div>\r\n                  <TextField\r\n                    required\r\n                    className={textField.root}\r\n                    label=\"رمز عبور\"\r\n                    variant=\"outlined\"\r\n                    id=\"custom-css-outlined-input\"\r\n                    value={formData.password}\r\n                    error={formData.password === \"\"}\r\n                    helperText={\r\n                      formData.password === \"\" ?\r\n                      'رمز عبور را وارد نمایید' :\r\n                      ' '}\r\n                    onChange={onchangeHandler}\r\n                    onClick={clickHandler}\r\n                    name='password'\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <FormControlLabel\r\n                    className={formControlLabel.root}\r\n                    aria-label=\"Acknowledge\"\r\n                    control={\r\n                      <Checkbox color=\"default\" />}\r\n                    label=\"به خاطر سپردن ورود من در این سیستم\"\r\n                  />\r\n                </div>\r\n                <div className={flex.root}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className={button.root}\r\n                    variant=\"contained\">ورود</Button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </Grid>\r\n          <Hidden smDown>\r\n            <Grid item xs={6}\r\n              container\r\n              justify=\"center\"\r\n              alignItems=\"center\">\r\n              <img src={backgroundImage} alt=\"\"\r\n                style={{\r\n                  width: '90%',\r\n                }} />\r\n            </Grid>\r\n          </Hidden>\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","E:\\projects\\react app\\Ecommerce\\src\\routes\\index.jsx",[],"E:\\projects\\react app\\Ecommerce\\src\\components\\Home.jsx",[],"E:\\projects\\react app\\Ecommerce\\src\\components\\Treeview.jsx",[],"E:\\projects\\react app\\Ecommerce\\src\\components\\TreeviewLoader.jsx",[],"E:\\projects\\react app\\Ecommerce\\src\\components\\AccordionLoader.jsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"54","replacedBy":"60"},{"ruleId":"56","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":194,"column":38,"nodeType":"64","messageId":"65","endLine":194,"endColumn":39},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],["66"],["67"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]