[{"E:\\projects\\react app\\ecommerce\\src\\index.js":"1","E:\\projects\\react app\\ecommerce\\src\\App.js":"2","E:\\projects\\react app\\ecommerce\\src\\components\\Accordion.jsx":"3","E:\\projects\\react app\\Ecommerce\\src\\index.js":"4","E:\\projects\\react app\\Ecommerce\\src\\App.js":"5","E:\\projects\\react app\\Ecommerce\\src\\components\\Accordion.jsx":"6"},{"size":541,"mtime":1609774300983,"results":"7","hashOfConfig":"8"},{"size":512,"mtime":1609837221930,"results":"9","hashOfConfig":"8"},{"size":3521,"mtime":1609787942843,"results":"10","hashOfConfig":"8"},{"size":541,"mtime":1609774300983,"results":"11","hashOfConfig":"12"},{"size":524,"mtime":1609957490128,"results":"13","hashOfConfig":"12"},{"size":4173,"mtime":1610150181238,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1r920mj",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1irvqce",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"E:\\projects\\react app\\ecommerce\\src\\index.js",[],["31","32"],"E:\\projects\\react app\\ecommerce\\src\\App.js",[],"E:\\projects\\react app\\ecommerce\\src\\components\\Accordion.jsx",[],["33","34"],"E:\\projects\\react app\\Ecommerce\\src\\index.js",[],["35","36"],"E:\\projects\\react app\\Ecommerce\\src\\App.js",[],"E:\\projects\\react app\\Ecommerce\\src\\components\\Accordion.jsx",["37"],"import React, { useState, useEffect } from 'react'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport SettingsIcon from '@material-ui/icons/Settings'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst accordingStyles = makeStyles(() => ({\r\n  root: {\r\n    background: 'transparent',\r\n    color: '#FFF',\r\n    width: 500,\r\n    borderRadius: 3\r\n  }\r\n}))\r\nconst accordionSummaryStyles = makeStyles(() => ({\r\n  root: {\r\n    background: 'rgba(0,0,0,0.5)',\r\n    borderRadius: 3\r\n  }\r\n}))\r\nconst accordionDetailsStyles = makeStyles(() => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}))\r\n\r\nconst SimpleAccordion = (props) => {\r\n  let checked\r\n  const [state, setstate] = useState(checked)\r\n\r\n  useEffect(() => {\r\n    checked = document.querySelectorAll('.PrivateSwitchBase-input-7')\r\n    setstate(checked)\r\n  }, [])\r\n\r\n  const according = accordingStyles()\r\n  const accordionDetails = accordionDetailsStyles()\r\n  const accordionSummary = accordionSummaryStyles()\r\n\r\n  const clickHandler = (e) => {\r\n    // setstate(prevstate => [...prevstate, ...checked])\r\n    // setstate(state)\r\n    setstate([...state].filter((item) => e.target.value === item.value))\r\n    // setstate(checked)\r\n    // console.log(checked[0].checked)\r\n    console.log(state)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        style={{\r\n          marginTop: '5%',\r\n        }}\r\n        container\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\">\r\n        <Grid item xs={12}>\r\n          <Accordion className={according.root}>\r\n            <AccordionSummary\r\n              className={accordionSummary.root}\r\n              expandIcon={<ExpandMoreIcon style={{ color: 'white' }} />}\r\n              aria-controls=\"panel1a-content\"\r\n              id=\"panel1a-header\"\r\n            >\r\n              <SettingsIcon style={{ marginLeft: '2%' }} />\r\n              <Typography>تنظیمات</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails className={accordionDetails.root}>\r\n              <div>\r\n                {\r\n                  props.items &&\r\n                  props.items.map((item, key) => {\r\n                    return (\r\n                      <div key={key}>\r\n                        <FormControlLabel\r\n                          style={{\r\n                            padding: '2%'\r\n                          }}\r\n                          key={key}\r\n                          aria-label=\"Acknowledge\"\r\n                          control={\r\n                            <Checkbox color=\"default\"\r\n                              value={item.id}\r\n                              defaultChecked={item.value}\r\n                              onClick={clickHandler}\r\n                            />}\r\n                          label={item.title}\r\n                        />\r\n                      </div>\r\n                    )\r\n                  })\r\n                }\r\n              </div>\r\n              <Divider />\r\n              <div style={{\r\n                padding: '3%',\r\n                display: 'flex',\r\n                flexFlow: 'row-reverse'\r\n              }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  style={{\r\n                    margin: '1%'\r\n                  }}>انصراف</Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  style={{\r\n                    margin: '1%'\r\n                  }}>ذخیره</Button>\r\n              </div>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SimpleAccordion\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"38","replacedBy":"44"},{"ruleId":"40","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":41,"column":15,"nodeType":"48","endLine":41,"endColumn":70},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],["49"],["50"],["49"],["50"],"react-hooks/exhaustive-deps","Assignments to the 'checked' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-global-assign","no-unsafe-negation"]